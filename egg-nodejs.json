{
    "_comment": "DO NOT EDIT: FILE GENERATED AUTOMATICALLY BY PANEL",
    "meta": {
        "version": "PLCN_v2",
        "update_url": "https://raw.githubusercontent.com/officialhypefox/velrix-eggs/refs/heads/main/egg-nodejs.json"
    },
    "exported_at": "2025-09-19T10:44:37+00:00",
    "name": "Node.js",
    "author": "contact@velrix.net",
    "uuid": "fe73af9d-0d33-42f4-9572-fad52eb802f0",
    "description": "A runtime that brings JavaScript to the server, great for building fast, event-driven applications and APIs with a huge ecosystem.",
    "tags": [],
    "features": [],
    "docker_images": {
        "Node.js 22": "ghcr.io/parkervcp/yolks:nodejs_22",
        "Node.js 20": "ghcr.io/parkervcp/yolks:nodejs_20",
        "Node.js 18": "ghcr.io/parkervcp/yolks:nodejs_18"
    },
    "file_denylist": [],
    "startup": "export PATH=/home/container/node_modules/.bin:$PATH; if [[ -d .git ]] && [[ {{AUTO_UPDATE}} == \"1\" ]]; then git pull; fi; if [ -f package.json ]; then npm install; fi; tsx {{APP_FILE}}",
    "config": {
        "files": "{}",
        "startup": "{\n    \"done\": [\n        \"Started\",\n        \"Listening\"\n    ]\n}",
        "logs": "{}",
        "stop": "^C"
    },
    "scripts": {
        "installation": {
            "script": "#!/bin/bash\r\n# NodeJS App Installation Script\r\n#\r\n# Server Files: /mnt/server\r\n\r\napt update\r\napt install -y git curl build-essential python3\r\n\r\necho -e \"updating npm. please wait...\"\r\nnpm install -g npm@latest\r\n\r\nmkdir -p /mnt/server\r\ncd /mnt/server\r\n\r\nif [ -n \"${GIT_ADDRESS}\" ]; then\r\n    ## add git ending if it's not on the address\r\n    if [[ \"${GIT_ADDRESS}\" != *.git ]]; then\r\n        GIT_ADDRESS=\"${GIT_ADDRESS}.git\"\r\n    fi\r\n\r\n    if [ -z \"${GIT_USERNAME}\" ] && [ -z \"${GIT_ACCESS_TOKEN}\" ]; then\r\n        echo -e \"using anon api call\"\r\n    else\r\n        GIT_ADDRESS=\"https://${GIT_USERNAME}:${GIT_ACCESS_TOKEN}@$(echo -e ${GIT_ADDRESS} | cut -d/ -f3-)\"\r\n    fi\r\n\r\n    ## pull git js repo\r\n    if [ \"$(ls -A /mnt/server)\" ]; then\r\n        echo -e \"/mnt/server directory is not empty.\"\r\n        if [ -d .git ]; then\r\n            echo -e \".git directory exists\"\r\n            if [ -f .git/config ]; then\r\n                echo -e \"loading info from git config\"\r\n                ORIGIN=$(git config --get remote.origin.url)\r\n            else\r\n                echo -e \"files found with no git config\"\r\n                echo -e \"closing out without touching things to not break anything\"\r\n                exit 10\r\n            fi\r\n        fi\r\n\r\n        if [ \"${ORIGIN}\" == \"${GIT_ADDRESS}\" ]; then\r\n            echo \"pulling latest from github\"\r\n            git pull\r\n        fi\r\n    else\r\n        echo -e \"/mnt/server is empty.\\ncloning files into repo\"\r\n        if [ -z ${GIT_BRANCH} ]; then\r\n            echo -e \"cloning default branch\"\r\n            git clone ${GIT_ADDRESS} .\r\n        else\r\n            echo -e \"cloning ${GIT_BRANCH}'\"\r\n            git clone --single-branch --branch ${GIT_BRANCH} ${GIT_ADDRESS} .\r\n        fi\r\n    fi\r\nfi\r\n\r\necho \"Installing dependencies from package.json\"\r\nif [ -f /mnt/server/package.json ]; then\r\n    npm ci --production || npm install --production\r\nfi\r\n\r\n# Ensure tsx is available locally without requiring user package.json changes\r\necho -e \"ensuring tsx is available locally...\"\r\nif [ ! -f /mnt/server/package.json ]; then\r\n    echo '{}' > /mnt/server/package.json\r\nfi\r\nnpm i tsx@latest --no-save\r\n\r\necho -e \"install complete\"\r\nexit 0",
            "container": "ghcr.io/parkervcp/installers:debian",
            "entrypoint": "bash"
        }
    },
    "variables": [
        {
            "name": "Main File",
            "description": "The main file to run for your application. Can be a .js or .ts file.",
            "env_variable": "APP_FILE",
            "default_value": "index.js",
            "user_viewable": true,
            "user_editable": true,
            "rules": [
                "required",
                "string",
                "max:64"
            ],
            "sort": 1
        },
        {
            "name": "Git Auto Update",
            "description": "Automatically update the application by pulling the latest files from the Git repository on every startup.",
            "env_variable": "AUTO_UPDATE",
            "default_value": "0",
            "user_viewable": true,
            "user_editable": true,
            "rules": [
                "required",
                "boolean"
            ],
            "sort": 2
        },
        {
            "name": "Git Repository Address",
            "description": "The Git repository address to clone from.",
            "env_variable": "GIT_ADDRESS",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": [
                "nullable",
                "string"
            ],
            "sort": 3
        },
        {
            "name": "Git Branch",
            "description": "The Git branch to clone from.",
            "env_variable": "GIT_BRANCH",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": [
                "nullable",
                "string"
            ],
            "sort": 4
        },
        {
            "name": "Git Username",
            "description": "The Git username for authentication, if required.",
            "env_variable": "GIT_USERNAME",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": [
                "nullable",
                "string"
            ],
            "sort": 5
        },
        {
            "name": "Git Access Token",
            "description": "The Git access token for authentication, if required.",
            "env_variable": "GIT_ACCESS_TOKEN",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": [
                "nullable",
                "string"
            ],
            "sort": 6
        }
    ]
}